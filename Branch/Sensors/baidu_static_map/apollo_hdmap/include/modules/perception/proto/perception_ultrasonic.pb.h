// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_ultrasonic.proto

#ifndef PROTOBUF_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto__INCLUDED
#define PROTOBUF_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/header.pb.h"
#include "modules/common/proto/geometry.pb.h"
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
void protobuf_AssignDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
void protobuf_ShutdownFile_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();

class ImpendingCollisionEdge;
class ImpendingCollisionEdges;

// ===================================================================

class ImpendingCollisionEdge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.ImpendingCollisionEdge) */ {
 public:
  ImpendingCollisionEdge();
  virtual ~ImpendingCollisionEdge();

  ImpendingCollisionEdge(const ImpendingCollisionEdge& from);

  inline ImpendingCollisionEdge& operator=(const ImpendingCollisionEdge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImpendingCollisionEdge& default_instance();

  void Swap(ImpendingCollisionEdge* other);

  // implements Message ----------------------------------------------

  inline ImpendingCollisionEdge* New() const { return New(NULL); }

  ImpendingCollisionEdge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImpendingCollisionEdge& from);
  void MergeFrom(const ImpendingCollisionEdge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImpendingCollisionEdge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // repeated int32 cone_id_list = 2 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR int cone_id_list_size() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_cone_id_list();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kConeIdListFieldNumber = 2;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::int32 cone_id_list(int index) const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_cone_id_list(int index, ::google::protobuf::int32 value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void add_cone_id_list(::google::protobuf::int32 value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cone_id_list() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cone_id_list();

  // repeated .apollo.common.Point3D point = 3;
  int point_size() const;
  void clear_point();
  static const int kPointFieldNumber = 3;
  const ::apollo::common::Point3D& point(int index) const;
  ::apollo::common::Point3D* mutable_point(int index);
  ::apollo::common::Point3D* add_point();
  ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >*
      mutable_point();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >&
      point() const;

  // optional double tracking_time = 4;
  bool has_tracking_time() const;
  void clear_tracking_time();
  static const int kTrackingTimeFieldNumber = 4;
  double tracking_time() const;
  void set_tracking_time(double value);

  // @@protoc_insertion_point(class_scope:apollo.perception.ImpendingCollisionEdge)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tracking_time();
  inline void clear_has_tracking_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cone_id_list_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D > point_;
  double tracking_time_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
  friend void protobuf_AssignDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
  friend void protobuf_ShutdownFile_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();

  void InitAsDefaultInstance();
  static ImpendingCollisionEdge* default_instance_;
};
// -------------------------------------------------------------------

class ImpendingCollisionEdges : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.ImpendingCollisionEdges) */ {
 public:
  ImpendingCollisionEdges();
  virtual ~ImpendingCollisionEdges();

  ImpendingCollisionEdges(const ImpendingCollisionEdges& from);

  inline ImpendingCollisionEdges& operator=(const ImpendingCollisionEdges& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImpendingCollisionEdges& default_instance();

  void Swap(ImpendingCollisionEdges* other);

  // implements Message ----------------------------------------------

  inline ImpendingCollisionEdges* New() const { return New(NULL); }

  ImpendingCollisionEdges* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImpendingCollisionEdges& from);
  void MergeFrom(const ImpendingCollisionEdges& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImpendingCollisionEdges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
  int impending_collision_edge_size() const;
  void clear_impending_collision_edge();
  static const int kImpendingCollisionEdgeFieldNumber = 1;
  const ::apollo::perception::ImpendingCollisionEdge& impending_collision_edge(int index) const;
  ::apollo::perception::ImpendingCollisionEdge* mutable_impending_collision_edge(int index);
  ::apollo::perception::ImpendingCollisionEdge* add_impending_collision_edge();
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::ImpendingCollisionEdge >*
      mutable_impending_collision_edge();
  const ::google::protobuf::RepeatedPtrField< ::apollo::perception::ImpendingCollisionEdge >&
      impending_collision_edge() const;

  // optional .apollo.common.Header header = 2;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* mutable_header();
  ::apollo::common::Header* release_header();
  void set_allocated_header(::apollo::common::Header* header);

  // @@protoc_insertion_point(class_scope:apollo.perception.ImpendingCollisionEdges)
 private:
  inline void set_has_header();
  inline void clear_has_header();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::ImpendingCollisionEdge > impending_collision_edge_;
  ::apollo::common::Header* header_;
  friend void  protobuf_AddDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
  friend void protobuf_AssignDesc_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();
  friend void protobuf_ShutdownFile_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto();

  void InitAsDefaultInstance();
  static ImpendingCollisionEdges* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ImpendingCollisionEdge

// optional int32 id = 1;
inline bool ImpendingCollisionEdge::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImpendingCollisionEdge::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImpendingCollisionEdge::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImpendingCollisionEdge::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ImpendingCollisionEdge::id() const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdge.id)
  return id_;
}
inline void ImpendingCollisionEdge::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.ImpendingCollisionEdge.id)
}

// repeated int32 cone_id_list = 2 [deprecated = true];
inline int ImpendingCollisionEdge::cone_id_list_size() const {
  return cone_id_list_.size();
}
inline void ImpendingCollisionEdge::clear_cone_id_list() {
  cone_id_list_.Clear();
}
inline ::google::protobuf::int32 ImpendingCollisionEdge::cone_id_list(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdge.cone_id_list)
  return cone_id_list_.Get(index);
}
inline void ImpendingCollisionEdge::set_cone_id_list(int index, ::google::protobuf::int32 value) {
  cone_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.perception.ImpendingCollisionEdge.cone_id_list)
}
inline void ImpendingCollisionEdge::add_cone_id_list(::google::protobuf::int32 value) {
  cone_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.perception.ImpendingCollisionEdge.cone_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ImpendingCollisionEdge::cone_id_list() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ImpendingCollisionEdge.cone_id_list)
  return cone_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ImpendingCollisionEdge::mutable_cone_id_list() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ImpendingCollisionEdge.cone_id_list)
  return &cone_id_list_;
}

// repeated .apollo.common.Point3D point = 3;
inline int ImpendingCollisionEdge::point_size() const {
  return point_.size();
}
inline void ImpendingCollisionEdge::clear_point() {
  point_.Clear();
}
inline const ::apollo::common::Point3D& ImpendingCollisionEdge::point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdge.point)
  return point_.Get(index);
}
inline ::apollo::common::Point3D* ImpendingCollisionEdge::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ImpendingCollisionEdge.point)
  return point_.Mutable(index);
}
inline ::apollo::common::Point3D* ImpendingCollisionEdge::add_point() {
  // @@protoc_insertion_point(field_add:apollo.perception.ImpendingCollisionEdge.point)
  return point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >*
ImpendingCollisionEdge::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ImpendingCollisionEdge.point)
  return &point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::Point3D >&
ImpendingCollisionEdge::point() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ImpendingCollisionEdge.point)
  return point_;
}

// optional double tracking_time = 4;
inline bool ImpendingCollisionEdge::has_tracking_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImpendingCollisionEdge::set_has_tracking_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImpendingCollisionEdge::clear_has_tracking_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImpendingCollisionEdge::clear_tracking_time() {
  tracking_time_ = 0;
  clear_has_tracking_time();
}
inline double ImpendingCollisionEdge::tracking_time() const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdge.tracking_time)
  return tracking_time_;
}
inline void ImpendingCollisionEdge::set_tracking_time(double value) {
  set_has_tracking_time();
  tracking_time_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.ImpendingCollisionEdge.tracking_time)
}

// -------------------------------------------------------------------

// ImpendingCollisionEdges

// repeated .apollo.perception.ImpendingCollisionEdge impending_collision_edge = 1;
inline int ImpendingCollisionEdges::impending_collision_edge_size() const {
  return impending_collision_edge_.size();
}
inline void ImpendingCollisionEdges::clear_impending_collision_edge() {
  impending_collision_edge_.Clear();
}
inline const ::apollo::perception::ImpendingCollisionEdge& ImpendingCollisionEdges::impending_collision_edge(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdges.impending_collision_edge)
  return impending_collision_edge_.Get(index);
}
inline ::apollo::perception::ImpendingCollisionEdge* ImpendingCollisionEdges::mutable_impending_collision_edge(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ImpendingCollisionEdges.impending_collision_edge)
  return impending_collision_edge_.Mutable(index);
}
inline ::apollo::perception::ImpendingCollisionEdge* ImpendingCollisionEdges::add_impending_collision_edge() {
  // @@protoc_insertion_point(field_add:apollo.perception.ImpendingCollisionEdges.impending_collision_edge)
  return impending_collision_edge_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::ImpendingCollisionEdge >*
ImpendingCollisionEdges::mutable_impending_collision_edge() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ImpendingCollisionEdges.impending_collision_edge)
  return &impending_collision_edge_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::ImpendingCollisionEdge >&
ImpendingCollisionEdges::impending_collision_edge() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ImpendingCollisionEdges.impending_collision_edge)
  return impending_collision_edge_;
}

// optional .apollo.common.Header header = 2;
inline bool ImpendingCollisionEdges::has_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImpendingCollisionEdges::set_has_header() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImpendingCollisionEdges::clear_has_header() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImpendingCollisionEdges::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
inline const ::apollo::common::Header& ImpendingCollisionEdges::header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.ImpendingCollisionEdges.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::apollo::common::Header* ImpendingCollisionEdges::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.ImpendingCollisionEdges.header)
  return header_;
}
inline ::apollo::common::Header* ImpendingCollisionEdges::release_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.ImpendingCollisionEdges.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ImpendingCollisionEdges::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.ImpendingCollisionEdges.header)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fperception_2fproto_2fperception_5fultrasonic_2eproto__INCLUDED
