syntax = "proto2";

package apollo.planning;

import "modules/planning/proto/planner_open_space_config.proto";

message OpenSpaceTrajectoryProviderConfig {
  // TODO(Jinyun) Move PlannerOpenSpaceConfig to
  // OpenSpaceTrajectoryOptimizerConfig
  optional OpenSpaceTrajectoryOptimizerConfig
      open_space_trajectory_optimizer_config = 1;
}

message OpenSpaceTrajectoryOptimizerConfig {
  // Hybrid a star warm start configs
  optional HybridAStarConfig hybrid_a_star_config = 1;
  // Dual variable configs
  optional DualVariableConfig dual_variable_warm_start_config = 2;
  // Distance approach trajectory smoothing configs
  optional DistanceApproachTrajectorySmootherConfig
      distance_approach_trajectory_smoother_config = 3;
  optional float delta_t = 4 [default = 0.5];
  optional double is_near_destination_threshold = 5 [default = 0.001];
  // (TODO:(QiL) tmp message during refactoring, deprecate when all tuning done.
  optional PlannerOpenSpaceConfig planner_open_space_config = 6;
}

// Hybrid a star as warm start for later smoothing
message HybridAStarConfig {
  optional double xy_grid_resolution = 1 [default = 0.2];
  optional double phi_grid_resolution = 2 [default = 0.05];
  optional uint64 next_node_num = 3 [default = 10];
  optional double step_size = 4 [default = 0.5];
  optional double traj_forward_penalty = 5 [default = 0.0];
  optional double traj_back_penalty = 6 [default = 0.0];
  optional double traj_gear_switch_penalty = 7 [default = 10.0];
  optional double traj_steer_penalty = 8 [default = 100.0];
  optional double traj_steer_change_penalty = 9 [default = 10.0];
  optional double grid_a_star_xy_resolution = 15 [default = 0.1];
  optional double node_radius = 16 [default = 0.5];
}

enum DualVariableMode {
  DUAL_VARIABLE_IPOPT = 0;
  DUAL_VARIABLE_IPOPTQP = 1;
  DUAL_VARIABLE_OSQP = 2;
  DUAL_VARIABLE_DEBUG = 3;
}

// Dual variable configs for warm starting distance approach trajectory
// smoothing
message DualVariableConfig {
  optional double weight_d = 1 [default = 1.0];
  optional IpoptSolverConfig ipopt_config = 2;
  optional DualVariableMode qp_format = 3;
  optional double min_safety_distance = 4 [default = 0.0];
  optional bool debug_osqp = 5 [default = false];
  optional double beta = 6 [default = 1.0];
}

// Distance approach trajectory smoothing configs
message DistanceApproachTrajectorySmootherConfig {
  optional double weight_steer = 1;
  optional double weight_a = 2;
  optional double weight_steer_rate = 3;
  optional double weight_a_rate = 4;
  optional double weight_x = 5;
  optional double weight_y = 6;
  optional double weight_phi = 7;
  optional double weight_v = 8;
  optional double weight_steer_stitching = 9;
  optional double weight_a_stitching = 10;
  optional double weight_first_order_time = 11;
  optional double weight_second_order_time = 12;
  optional double min_safety_distance = 13 [default = 0.0];
  optional double max_speed_forward = 14 [default = 3.0];
  optional double max_speed_reverse = 15 [default = 2.0];
  optional double max_acceleration_forward = 16 [default = 2.0];
  optional double max_acceleration_reverse = 17 [default = 2.0];
  optional double min_time_sample_scaling = 18 [default = 0.1];
  optional double max_time_sample_scaling = 19 [default = 10.0];
  optional bool use_fix_time = 20 [default = false];
  optional IpoptSolverConfig ipopt_config = 21;
  optional bool enable_constraint_check = 22;
  optional bool enable_hand_derivative = 23;
  // True to enable hand derived derivative inside open space planner
  optional bool enable_derivative_check = 24;
  // True to enable derivative check inside open space planner
  optional bool enable_initial_final_check = 25 [default = false];
}

// Ipopt configs
message IpoptSolverConfig {
  optional int32 ipopt_print_level = 1;
  optional int32 mumps_mem_percent = 2;
  optional double mumps_pivtol = 3;
  optional int32 ipopt_max_iter = 4;
  optional double ipopt_tol = 5;
  optional double ipopt_acceptable_constr_viol_tol = 6;
  optional double ipopt_min_hessian_perturbation = 7;
  optional double ipopt_jacobian_regularization_value = 8;
  optional string ipopt_print_timing_statistics = 9;
  optional string ipopt_alpha_for_y = 10;
  optional string ipopt_recalc_y = 11;
  optional double ipopt_mu_init = 12 [default = 0.1];
  // ipopt barrier parameter, default 0.1
}
